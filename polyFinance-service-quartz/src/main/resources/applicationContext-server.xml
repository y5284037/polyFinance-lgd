<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:sca="http://www.springframework.org/schema/sca"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
            http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
            http://www.springframework.org/schema/sca http://www.springframework.org/schema/sca/spring-sca.xsd">

    <context:component-scan base-package="com.ptteng.polyFinance.lgd"/>


    <sca:service name="repaymentService"
                 type="com.ptteng.polyFinance.lgd.service.RepaymentService" target="repaymentService"/>


    <sca:service name="countService"
                 type="com.ptteng.polyFinance.lgd.service.CountService" target="countService"/>


    <bean id="repaymentService"
          class="com.ptteng.polyFinance.lgd.service.impl.RepaymentServiceImpl" parent="baseDaoService">

    </bean>


    <bean id="countService"
          class="com.ptteng.polyFinance.lgd.service.impl.CountServiceImpl" parent="baseDaoService">

    </bean>


    <bean id="dao" class="com.gemantic.dal.dao.impl.CompositeDaoImpl"/>

    <bean id="baseDaoService"
          class="com.ptteng.common.dao.BaseDaoServiceImpl">
        <property name="dao" ref="dao"/>
    </bean>


    <!-- performance -->
    <aop:aspectj-autoproxy/>
    <bean id="aroundLoggingTime" class="com.gemantic.common.stat.aop.time.AroundTimeConsume"/>
    <aop:config>
        <aop:aspect ref="aroundLoggingTime">
            <aop:pointcut id="publicServiceMethod"
                          expression="execution(* com.gemantic..service.*.*(..)) "/>
            <aop:around method="around" pointcut-ref="publicServiceMethod"/>
        </aop:aspect>
    </aop:config>

    <!--定时任务配置-->
    <!--1.配置任务类-->
    <bean id="countJob" class="com.ptteng.polyFinance.lgd.JobDetail.CountJob"/>


    <!--2.JobDetail的配置-->
    <bean id="countProductService" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="concurrent" value="false"/>
        <property name="targetObject" ref="countJob"/>
        <property name="targetMethod" value="countProductService"/>
    </bean>

    <bean id="sendMessage" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="concurrent" value="false"/>
        <property name="targetObject" ref="countJob"/>
        <property name="targetMethod" value="sendMessage"/>
    </bean>

    <!--3. Trigger的配置-->
    <bean id="countProductServiceTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="countProductService"/>
        <property name="cronExpression" value="*/5 * * * * ?"/>
    </bean>

    <bean id="sendMessageTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="sendMessage"/>
        <property name="cronExpression" value="*/10 * * * * ?"/>
    </bean>

    <!--4.Scheduler 调度器的配置-->
    <bean id="mockJobSchedule" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="schedulerName" value="mockJobSchedule"/>
        <property name="triggers">
            <list>
                <ref bean="countProductServiceTrigger"/>
                <ref bean="sendMessageTrigger"/>
            </list>
        </property>
    </bean>


</beans>

